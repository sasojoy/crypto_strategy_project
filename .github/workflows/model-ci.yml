name: Model CI

on:
  push:
    branches:
      - main
      - work
      - "ci/**"
  pull_request:
    paths:
      - '.github/workflows/model-ci.yml'
      - 'scripts/**'
      - 'resources/**'
      - 'csp/**'
      - 'requirements.txt'
      - 'pyproject.toml'
  schedule:
    - cron: '0 3 * * 1'   # 每週一 03:00 UTC
  workflow_dispatch:

jobs:
  auto-train-backtest:
    runs-on: ubuntu-latest

    # 將 secrets 先映射到 env，供步驟與 if: 安全取用（避免 "Unrecognized named-value: 'secrets'"）
    env:
      TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
      TELEGRAM_CHAT_ID:   ${{ secrets.TELEGRAM_CHAT_ID }}
      SSH_HOST:           ${{ secrets.SSH_HOST }}
      SSH_USER:           ${{ secrets.SSH_USER }}
      SSH_KEY:            ${{ secrets.SSH_KEY }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install xgboost scikit-learn joblib pandas numpy requests

      - name: Run CI orchestrator
        env:
          TELEGRAM_BOT_TOKEN: ${{ env.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID:   ${{ env.TELEGRAM_CHAT_ID }}
        run: |
          python -m scripts.ci_orchestrator \
            --csv resources/btc_15m.csv \
            --feature-func csp.features.h16.build_features_15m_4h \
            --models-dir models/ci \
            --artifacts-dir artifacts/ci \
            --target-metric roc_auc \
            --target-value 0.55 \
            --output logs/ci_run.json \
            --notify on_fail

      - name: Upload CI logs
        uses: actions/upload-artifact@v4
        with:
          name: model-ci-logs
          path: |
            logs/ci_run.json
            logs/threshold_report.json
          if-no-files-found: warn

      - name: Upload trained models
        uses: actions/upload-artifact@v4
        with:
          name: model-ci-models
          path: models/ci
          if-no-files-found: warn

      - name: Upload CI artifacts
        uses: actions/upload-artifact@v4
        with:
          name: model-ci-artifacts
          path: artifacts/ci
          if-no-files-found: warn

      # 部署後觸發你的 server 跑 daily pipeline（只有 SSH_* 存在才會執行）
      - name: Trigger daily pipeline on server (post-deploy)
        if: ${{ success() && env.SSH_HOST != '' && env.SSH_USER != '' && env.SSH_KEY != '' }}
        uses: appleboy/ssh-action@v1.0.0
        with:
          host:     ${{ env.SSH_HOST }}
          username: ${{ env.SSH_USER }}
          key:      ${{ env.SSH_KEY }}
          script: |
            set -e
            cd /opt/strategy
            git pull --rebase
            /bin/bash scripts/run_daily_pipeline.sh

      # 失敗也一定會通知（讀 logs/ci_run.json）
      - name: Telegram notify (always)
        if: ${{ always() }}
        env:
          TELEGRAM_BOT_TOKEN: ${{ env.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID:   ${{ env.TELEGRAM_CHAT_ID }}
        run: |
          python -m scripts.ci_notify_from_log

      # 也推「最新回測摘要」（優先原樣轉發 [SUMMARY ALL] {...}）
      - name: Telegram notify latest backtest (always)
        if: ${{ always() }}
        env:
          TELEGRAM_BOT_TOKEN: ${{ env.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID:   ${{ env.TELEGRAM_CHAT_ID }}
        run: |
          python -m scripts.notify_latest_backtest
