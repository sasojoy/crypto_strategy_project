name: Deploy to GCP VM

on:
  push:
    branches: [ main ]
  workflow_dispatch:

concurrency:
  group: deploy-prod
  cancel-in-progress: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Start ssh-agent and load key
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: |
            ${{ secrets.SSH_KEY }}

      - name: Add host to known_hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H "${{ secrets.SSH_HOST }}" >> ~/.ssh/known_hosts

      - name: Rsync project to VM
        run: |
          rsync -az \
            --exclude='.git' \
            --exclude='.github' \
            --exclude='.venv' \
            -e 'ssh -o StrictHostKeyChecking=yes' \
            ./ ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/home/${{ secrets.SSH_USER }}/repo_tmp/

      - name: Run remote deploy script (installs systemd units)
        run: |
          ssh -o StrictHostKeyChecking=yes ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} 'bash -lc "
            set -euo pipefail
            cd /home/${{ secrets.SSH_USER }}/repo_tmp
            # 必須以 repo 目錄執行 deploy.sh，裡面會 rsync 到 /opt/crypto_strategy_project
            sudo -n bash scripts/deploy.sh
          "'

      - name: Sanity check on VM (status + recent logs + diag)
        run: |
          ssh -o StrictHostKeyChecking=yes ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} 'bash -lc "
            set -euo pipefail
            cd /opt/crypto_strategy_project

            echo
            echo [INFO] Current directory: \$(pwd)
            echo [INFO] List systemd files:
            ls -la systemd || true

            echo
            echo '== systemctl status (timer/service) =='
            sudo -n systemctl status trader-once.timer --no-pager || true
            sudo -n systemctl status trader-once.service --no-pager || true

            echo
            echo '== recent journal (last 200 lines, last 30 minutes) =='
            if ! sudo -n journalctl -u trader-once.service --since "-30 min" -o cat | tail -n 200 ; then
              sudo -n journalctl -u trader-once.service -n 200 -o cat || true
            fi

            echo
            echo '== diag files (if any) =='
            ls -l logs/diag 2>/dev/null || true
            L=\$(ls -1t logs/diag/trace_*.log 2>/dev/null | head -n1 || true)
            if [ -n "\${L}" ]; then
              echo "-- showing \${L} --"
              tail -n 200 "\${L}" || true
            else
              echo "(no diag trace files)"
            fi
          "'

