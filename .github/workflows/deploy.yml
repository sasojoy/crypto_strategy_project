name: Deploy to GCP VM

on:
  push:
    branches: [ main ]
  workflow_dispatch:

concurrency:
  group: deploy-prod
  cancel-in-progress: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Start ssh-agent and load key
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: |
            ${{ secrets.SSH_KEY }}

      - name: Add host to known_hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H "${{ secrets.SSH_HOST }}" >> ~/.ssh/known_hosts

      - name: Prepare remote dir (sudo NOPASSWD expected)
        run: |
          ssh -o StrictHostKeyChecking=yes ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} \
            "sudo -n mkdir -p /opt/crypto_strategy_project && sudo -n chown -R ${USER:-$USER}:${USER:-$USER} /opt/crypto_strategy_project || sudo -n chown -R deploy:deploy /opt/crypto_strategy_project"

      - name: Sync files via rsync (safe, no models/logs)
        run: |
          rsync -az \
            --exclude='.git' \
            --exclude='.github' \
            --exclude='.venv' \
            --exclude='models/**' \
            --exclude='logs/**' \
            --exclude='resources/*.csv' \
            -e 'ssh -o StrictHostKeyChecking=yes' \
            ./ ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/opt/crypto_strategy_project/

      - name: Run remote deploy script
        run: |
          ssh -o StrictHostKeyChecking=yes ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} \
            "cd /opt/crypto_strategy_project && sudo -n bash scripts/deploy.sh"

      - name: Install/enable systemd timer and show status
        run: |
          ssh -o StrictHostKeyChecking=yes ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "
            set -euo pipefail
            sudo -n cp systemd/trader-once.service /etc/systemd/system/trader-once.service
            sudo -n cp systemd/trader-once.timer   /etc/systemd/system/trader-once.timer
            sudo -n systemctl daemon-reload
            sudo -n systemctl stop trader.service || true
            sudo -n systemctl stop trader-once.service || true
            sudo -n systemctl enable --now trader-once.timer
            sudo -n systemctl start trader-once.service
            sudo -n systemctl status trader-once.timer --no-pager || true
            sudo -n systemctl status trader-once.service --no-pager || true
          "