name: Deploy to GCP VM

on:
  push:
    branches: [ main ]
  workflow_dispatch:

concurrency:
  group: deploy-prod
  cancel-in-progress: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Start ssh-agent and load key
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: |
            ${{ secrets.SSH_KEY }}

      - name: Add host to known_hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H "${{ secrets.SSH_HOST }}" >> ~/.ssh/known_hosts

      # 需先在 VM 設好：/etc/sudoers.d/deploy 允許必要指令 NOPASSWD
      - name: Prepare remote dir
        run: |
          ssh -o StrictHostKeyChecking=yes ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "\
            sudo -n mkdir -p /opt/crypto_strategy_project && \
            sudo -n chown -R deploy:deploy /opt/crypto_strategy_project \
          "

      # 不要 --delete，並排除線上產物
      - name: Sync files via rsync (safe)
        run: |
          rsync -az \
            --exclude='.git' \
            --exclude='.github' \
            --exclude='.venv' \
            --exclude='models/**' \
            --exclude='logs/**' \
            --exclude='resources/*.csv' \
            -e 'ssh -o StrictHostKeyChecking=yes' \
            ./ ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/opt/crypto_strategy_project/

      # 用 sudo 執行 deploy.sh（免密碼）
      - name: Run remote deploy script
        run: |
          ssh -o StrictHostKeyChecking=yes ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "\
            sudo -n bash /opt/crypto_strategy_project/deploy.sh \
          "

      - name: Install systemd units and restart timer
        run: |
          ssh -o StrictHostKeyChecking=yes ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} 'bash -s' <<'REMOTE'
          set -euo pipefail
          cd /opt/crypto_strategy_project
          # 以 repo 內檔案安裝 unit，避免 YAML heredoc 解析問題
          sudo -n install -m 0644 deploy/systemd/trader-once.service /etc/systemd/system/trader-once.service
          sudo -n install -m 0644 deploy/systemd/trader-once.timer   /etc/systemd/system/trader-once.timer
          # 套用變更
          sudo -n systemctl daemon-reload
          # 停掉舊常駐（若存在）
          sudo -n systemctl stop trader.service || true
          sudo -n systemctl stop trader-once.service || true
          # 啟用/啟動 timer
          sudo -n systemctl enable --now trader-once.timer
          # 立即觸發一次，驗證新程式有被載入
          sudo -n systemctl start trader-once.service
          # 顯示最近日誌與狀態
          sudo -n journalctl -u trader-once -n 120 --no-pager || true
          systemctl status trader-once.service --no-pager || true
          systemctl status trader-once.timer   --no-pager || true
REMOTE

